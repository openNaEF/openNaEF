<j:jelly xmlns:j="jelly:core" trim="false">
    ### DEBUG start ###
    File: IOS-DEFAULT-VLAN-OP_CHANGE.jelly
    op.description.isChanged: ${op.description.isChanged()}
    op.description: ${op.description}
    op.isChanged(description): ${op.isChanged('description')}
    op.isChange(description): ${op.isChange('description')}
    op.fullIfname: ${op.fullIfname}
    op.vlanId: ${op.vlanId}
    op.vlanName: ${op.vlanName}
    op.svi_port: ${op.svi_port}
    op.svi_port.isChanged: ${op.svi_port.isChanged()}
    op.isChanged('svi_port'): ${op.isChanged('svi_port')}
    op.ipAddress.isChanged(): ${op.ipAddress.isChanged()}
    op.isChanged('ipAddress'): ${op.isChanged('ipAddress')}
    empty(op.ipAddress): ${empty(op.ipAddress)}
    empty(op.ipAddress.value): ${empty(op.ipAddress.value)}
    op.ipAddress: ${op.ipAddress}
    op.ipAddress.pre: ${op.ipAddress.pre}
    op.subnetMask.isChanged: ${op.subnetMask.isChanged()}
    op.isChanged('subnetMask'): ${op.isChanged('subnetMask')}
    op.subnetMask: ${op.subnetMask}
    op.subnetMask.pre: ${op.subnetMask.pre}
    op.maskLength.isChanged: ${op.maskLength.isChanged()}
    op.isChanged('maskLength'): ${op.isChanged('maskLength')}
    op.maskLength: ${op.maskLength}
    op.maskLength.pre: ${op.maskLength.pre}
    ### DEBUG end ###
  <!--
    tagged/untagged vlan の追加/削除時も VLAN-OP_CHANGE が出力される.
    (ADD/REMOVE_TAGGED/UNTAGGED_VLAN は VLAN-OP_CHANGE の子 OP となっている)
    この場合に空の "VLAN設定変更" layer_block が出力されるのを防ぐため,
    先ず変更しうる VLAN パラメータの何れかに変更があるかどうかを検査して,
    変更がある場合のみ VLAN設定変更 の "layer_block" を出力するようにしている.
  -->
  <j:if test="${op.vlanName.isChanged() or op.description.isChanged() or op.ipAddress.isChanged() or op.subnetMask.isChanged()}">
    <layer_block name="VLAN設定変更" snmptrap="disable">
      <j:if test="${op.vlanName.isChanged()}">
        <j:if test="${empty(op.vlanId.value)}">
          XXX: ERROR: op.vlanId is empty.
        </j:if>
        configure terminal
        vlan ${op.vlanId}
        <j:if test="${op.vlanName.isChanged()}">
          <j:choose>
            <j:when test="${!empty(op.vlanName.value)}">
              name ${op.vlanName}
            </j:when>
            <j:otherwise>
              no name
            </j:otherwise>
          </j:choose>
        </j:if>
      </j:if>
      configure terminal
      interface vlan${op.vlanId}
      <j:if test="${op.description.isChanged()}">
        <j:choose>
          <j:when test="${empty(op.description.value)}">
            no description
          </j:when>
          <j:otherwise>
            description ${op.description}
          </j:otherwise>
        </j:choose>
      </j:if>
      <j:if test="${op.ipAddress.isChanged() or op.subnetMask.isChanged()}">
        <j:choose>
          <j:when test="${empty(op.ipAddress.value)}"> <!-- ipAddress が null なら subnetMask に関わりなく消す -->
            no ip address
          </j:when>
          <j:when test="${!empty(op.ipAddress.value) and empty(op.subnetMask.value)}"> <!-- ipAddress があるのに subnetMask が null は設定不可 -->
            ERROR: op.subnetMask is empty.
          </j:when>
          <j:otherwise>
            ip address ${op.ipAddress} ${op.subnetMask}
          </j:otherwise>
        </j:choose>
      </j:if>
        exit
        exit
    </layer_block>
  </j:if>
</j:jelly>